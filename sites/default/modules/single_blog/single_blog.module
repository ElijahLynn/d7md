<?php

/**
 * @file
 * Enables a single-user blog.
 */

/**
 * After you learn Form API in Chapter 5, you'll be able to
 * make these settings configurable.
 */
define('SINGLE_BLOG_NODE_TYPE', 'article');
define('SINGLE_BLOG_LIST_COUNT', 3);

/**
 * Returns a list of blog entries.
 *
 * @param int $number
 *   The number of blog entries to return.
 *
 * @return object
 *   A result set object containing the list of blog entries.
 */
function single_blog_list($number) {
  // Use the Database API to retrieve our data.
  // @see http://drupal.org/node/310069
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created', 'uid'))
    ->condition('type', SINGLE_BLOG_NODE_TYPE)
    ->condition('status', 1)
    ->orderBy('created', 'DESC')
    ->range(0, $number)
    ->addTag('node_access')
    ->execute();

  return $query;
}

/**
 * Implements hook_block_info().
 */
function single_blog_block_info() {
  $blocks = array();

  // The array key defines the $delta parameter used in all
  // other block hooks.
  $blocks['recent'] = array(
    // The names of the block on the blocks administration page.
    'info' => t('Recent blog posts'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * First draft!
 */
function single_blog_block_view($delta = '') {
  // Create an empty block.
  $block = array(
    'subject' => '',
    'content' => '',
  );

  // Check which block is being requested.
  if (user_access('access content')) {
    // Retrieve the most recent nodes.
    $result = single_blog_list(SINGLE_BLOG_LIST_COUNT);

    // Create links for each blog entry.
    $items = array();
    foreach ($result as $node) {
      $items[] = array(
        'data' => l($node->title, 'node/' . $node->nid),
        'class' => array('node-' . $node->nid),
      );
    }

    if (!empty($items)) {
      // Theme the list of blog entries.
      $block['content'] = theme('item_list', array('items' => $items));
    }
  }

  return $block;
}
